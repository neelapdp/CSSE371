import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Scanner;

import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.border.EmptyBorder;

public class jes1 extends JFrame {

	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					jes1 frame = new jes1();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public jes1() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		
		  // Create a list containing CheckboxListItem's
	      DefaultListModel<CheckboxListItem> model = new DefaultListModel<CheckboxListItem>();
	      JList<CheckboxListItem> list = new JList<CheckboxListItem>(model);
	      model.addElement(new CheckboxListItem("hi"));
	      Scanner sc = new Scanner(System.in);
	      
	      // Use a CheckboxListRenderer (see below)
	      // to renderer list cells
	 
	      list.setCellRenderer(new CheckboxListRenderer());
	      list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
	 
	      // Add a mouse listener to handle changing selection
	 
	      list.addMouseListener(new MouseAdapter() {
	         public void mouseClicked(MouseEvent event) {
	            JList<CheckboxListItem> list =
	               (JList<CheckboxListItem>) event.getSource();
	 
	            // Get index of item clicked
	 
	            int index = list.locationToIndex(event.getPoint());
	            CheckboxListItem item = (CheckboxListItem) list.getModel()
	                  .getElementAt(index);
	 
	            // Toggle selected state
	 
	            item.setSelected(!item.isSelected());
	 
	            // Repaint cell
	 
	            list.repaint(list.getCellBounds(index, index));
	         }
	      });
	      
	      this.getContentPane().add(new JScrollPane(list));
		
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
	}

}
